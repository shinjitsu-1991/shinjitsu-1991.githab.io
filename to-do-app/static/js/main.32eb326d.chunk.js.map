{"version":3,"sources":["components/todo-head-component/ToDoHead.js","components/todo-search-btns/ToDoSearchBtns.js","components/search-component/ToDoSearch.js","components/todo-list-item/ToDoListItem.js","components/todo-list/ToDoList.js","components/to-do-add/ToDoFooter.js","services/data-from-localstorage/index.js","components/todo-app/ToDoApp.js","index.js"],"names":["ToDoHead","props","className","todo","done","ToDoSearchBtns","btnsMarkup","name","label","map","item","classes","currentButton","key","onClick","editSearchBtnsVal","ToDoSearch","changeSearchValue","e","editSearchValue","target","value","setState","state","onChange","this","placeholder","type","React","Component","ToDoListItem","itemCLasses","important","onToggleDone","onDeleted","onToggleImportant","ToDoList","itemsList","data","id","ToDoFooter","onLabelChange","onSubmit","preventDefault","onAdded","EditToDoData","_dataName","getData","localStorage","getItem","setItem","JSON","parse","addItem","newItem","newData","setData","stringify","removeItem","removedItemId","idx","findIndex","el","slice","editItemParam","itemId","editedParam","ToDoApp","maxId","Math","floor","random","deleteItem","todoData","text","getDoneCount","filter","length","getTodoCount","val","searchVal","searchBtns","addDataAfterFilter","editDataForBtnsState","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32eb326d.chunk.js","sourcesContent":["import React from 'react';\nimport \"./ToDoHead.css\";\n\nconst ToDoHead = (props) => {\n  return (\n      <div className=\"todo-head\">\n        <h1>My ToDo</h1>\n        <div className=\"todo-head-info\">\n          {props.todo} more to do, {props.done} done\n        </div>\n      </div>\n  );\n};\n\nexport default ToDoHead;","import React from \"react\";\nimport \"./ToDoSearchBtns.css\";\n\nconst ToDoSearchBtns = (props) => {\n    const btns = [\n        {name: 'All', label: 'all'},\n        {name: 'Active', label: 'active'},\n        {name: 'Done', label: 'done'}\n    ];\n\n    const btnsMarkup = btns.map((item) => {\n        let classes = 'btn';\n        if(props.currentButton === item.label) {\n            classes += ' btn-active';\n        }\n        return <button className={classes} key={item.label} onClick={() => props.editSearchBtnsVal(item.label)}>{item.name}</button>\n    });\n    return (\n      <div className=\"todo-search-btns\">\n          {btnsMarkup}\n      </div>\n    );\n};\n\nexport default ToDoSearchBtns;","import React from 'react';\nimport \"./ToDoSearch.css\";\nimport ToDoSearchBtns from \"../todo-search-btns/ToDoSearchBtns\";\n\nexport default class ToDoSearch extends React.Component{\n    constructor() {\n      super();\n\n      this.state = {\n          label: ''\n      }\n    };\n\n    changeSearchValue = (e) => {\n        this.props.editSearchValue(e.target.value)\n        this.setState({\n            label: e.target.value\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"todo-search\">\n                <input onChange={this.changeSearchValue} placeholder=\"Search\" type=\"text\" value={this.state.label}/>\n                <ToDoSearchBtns currentButton={this.props.currentButton} editSearchBtnsVal={this.props.editSearchBtnsVal}/>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport styles from './ToDoListItem.css';\n\nexport default class ToDoListItem extends React.Component{\n\n    render() {\n        let itemCLasses = 'todo-list-item';\n\n        if(this.props.done) {\n            itemCLasses += ' done';\n        }\n\n        if(this.props.important) {\n            itemCLasses += ' important';\n        }\n\n        return (\n            <div className={itemCLasses}>\n                <span onClick={this.props.onToggleDone} className=\"list-item\"><i>{ this.props.label }</i></span>\n                <div className=\"todo-list-item_btns\">\n                    <button onClick={this.props.onDeleted} className=\"item-delete\">&#xd7;</button>\n                    <button onClick={this.props.onToggleImportant} className=\"item-important\">&#33;</button>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ToDoListItem from \"../todo-list-item/ToDoListItem\";\n\nconst ToDoList = (props) => {\n\n    const itemsList = props.data.map((item) => {\n        return <li className=\"list-group-item\" key={item.id}><ToDoListItem\n            onDeleted={()=>props.onDeleted(item.id)}\n            onToggleDone={() => props.onToggleDone(item.id)}\n            onToggleImportant={() => props.onToggleImportant(item.id)}\n            label={item.label}\n            done={item.done}\n            important={item.important}/></li>\n    });\n    return(\n        <ul className=\"list-group\">\n            {itemsList}\n        </ul>\n    );\n};\n\nexport default ToDoList;","import React from \"react\";\nimport \"./ToDoFoter.css\";\n\nexport default class ToDoFooter extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            label: ''\n        }\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onAdded(this.state.label)\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit} className=\"todo-footer\">\n                <input onChange={this.onLabelChange} placeholder=\"Add new\" type=\"text\" value={this.state.label}/>\n                <button>Add</button>\n            </form>\n        );\n    }\n}","export default class EditToDoData {\n    _dataName = 'shjToDoData';\n\n    getData = () => {\n        if(!localStorage.getItem(this._dataName)) {\n            localStorage.setItem(this._dataName, '[]');\n        }\n        return JSON.parse(localStorage.getItem(this._dataName));\n    };\n\n    addItem = (newItem) => {\n        const data = this.getData(),\n            newData = [...data, newItem];\n        this.setData(JSON.stringify(newData))\n    };\n\n    removeItem = (removedItemId) => {\n        const data = this.getData(),\n              idx = data.findIndex((el)=>\n                el.id === removedItemId\n            );\n        const newData = [...data.slice(0,idx), ...data.slice(idx+1)];\n        this.setData(JSON.stringify(newData))\n    };\n\n    editItemParam = (itemId, editedParam) => {\n        const data = this.getData(),\n              idx = data.findIndex((el)=>\n                    el.id === itemId\n                );\n        const newData = [...data];\n        newData[idx][editedParam] = !newData[idx][editedParam];\n        this.setData(JSON.stringify(newData))\n    };\n\n    setData = (newData) => {\n        localStorage.setItem(this._dataName, newData);\n    };\n}\n","import React from 'react';\nimport \"./ToDoApp.css\";\nimport ToDoHead from \"../todo-head-component/ToDoHead\";\nimport ToDoSearch from \"../search-component/ToDoSearch\";\nimport ToDoList from \"../todo-list/ToDoList\";\nimport ToDoFooter from \"../to-do-add/ToDoFooter\";\nimport EditToDoData from \"../../services/data-from-localstorage/index\"\n\nexport default class ToDoApp extends React.Component {\n    constructor() {\n        super();\n\n        this.data = new EditToDoData();\n        this.state = {\n            todoData: this.data.getData(),\n            searchBtns: 'all',\n            searchVal: ''\n        };\n    }\n\n    maxId = () => {\n        return Math.floor(Math.random() * (9999999 - 0 + 1)) + 0\n    };\n\n    deleteItem = (id) => {\n        this.data.removeItem(id);\n        this.setState({\n                todoData: this.data.getData()\n            }\n        )\n    };\n\n    addItem = (text) => {\n        const newItem = {\n            label: text,\n            important: false,\n            done: false,\n            id: this.maxId()\n        };\n        this.data.addItem(newItem);\n        this.setState({\n                todoData: this.data.getData()\n            }\n        )\n    };\n\n    onToggleDone = (id) => {\n        this.data.editItemParam(id, 'done');\n        this.setState({\n                todoData: this.data.getData()\n            }\n        )\n    };\n\n    onToggleImportant = (id) => {\n        this.data.editItemParam(id, 'important');\n        this.setState({\n                todoData: this.data.getData()\n            }\n        )\n    };\n\n    getDoneCount = () => {\n        const doneCount = this.state.todoData.filter((el) => el.done);\n        return doneCount.length;\n    };\n\n    getTodoCount = () => {\n        const doneCount = this.state.todoData.filter((el) => !el.done);\n        return doneCount.length;\n    };\n\n    editSearchValue = (val) => {\n        this.setState({\n            searchVal: val\n        });\n    };\n\n    editSearchBtnsVal = (val) => {\n        this.setState({\n            searchBtns: val\n        })\n    };\n\n    addDataAfterFilter = () => {\n        if(this.state.searchVal.length < 1) {\n            return this.editDataForBtnsState(this.state.todoData);\n        }\n        return this.editDataForBtnsState(this.state.todoData.filter((el) => el.label.toLowerCase().includes(this.state.searchVal.toLowerCase())));\n    };\n\n    editDataForBtnsState = (data) => {\n        switch (this.state.searchBtns) {\n            case \"all\": return data;\n            case \"active\": return data.filter((el) => !el.done);\n            case \"done\": return data.filter((el) => el.done);\n            default: return data;\n        }\n    };\n\n    render() {\n        return(\n            <div className=\"todo-main\">\n                <ToDoHead todo={this.getTodoCount()} done={this.getDoneCount()} />\n                <ToDoSearch editSearchValue={this.editSearchValue} editSearchBtnsVal={this.editSearchBtnsVal} currentButton={this.state.searchBtns}/>\n                <ToDoList data={this.addDataAfterFilter()} onDeleted={this.deleteItem} onToggleDone={this.onToggleDone} onToggleImportant={this.onToggleImportant}/>\n                <ToDoFooter onAdded={this.addItem}/>\n            </div>\n        );\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ToDoApp from './components/todo-app/ToDoApp'\n\nReactDOM.render(<ToDoApp />, document.getElementById('root'));\n\n"],"sourceRoot":""}